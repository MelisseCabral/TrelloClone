name: Deploy to Amazon ECS


on:
  push:
    default:

env:
  AWS_REGION: $MY_AWS_REGION                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: $MY_ECR_REPOSITORY           # set this to your Amazon ECR repository name
  ECS_SERVICE: $MY_ECS_SERVICE                 # set this to your Amazon ECS service name
  ECS_CLUSTER: $MY_ECS_CLUSTER                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: $MY_ECS_TASK_DEFINITION # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: $MY_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

defaults:
  run:
    shell: bash

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        working-directory: packages/backend
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          
          # Build a docker container and
          docker build -t $ECR_REGISTRY/brother-bet-api:$IMAGE_TAG .

          # push it to ECR so that it can
          docker push $ECR_REGISTRY/brother-bet-api:$IMAGE_TAG

          # be deployed to ECS.
          echo "::set-output name=image::$ECR_REGISTRY/brother-bet-api:$IMAGE_TAG"

              
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: brother-task-definition:1
          container-name: BrotherApi
          image: ${{ steps.build-image.outputs.image }}

      
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: brother-bet
          cluster: brother-bet
          wait-for-service-stability: true
